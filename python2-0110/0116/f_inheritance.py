# f_inheritance.py
# f_상속.py

### 상속 ###

#! 1. 상속의 정의
# : 한 클래스(부모 클래스)의 속성과 메서드를
#       다른 클래스(자식 클래스)에게 전달하는 형태
# : 상속 받는다 == 다른 클래스의 속성과 기능을 물려받는다.

#? 부모 클래스 (슈퍼 클래스, 상위 클래스)
# : 상속을 해주는 클래스

#? 자식 클래스 (서브 클래스, 하위 클래스)
# : 상속을 받는 클래스

#! 2. 상속의 특징
# 1) 재사용성
#       : 이미 정의된 클래스의 속성과 메서드를 재사용하여 코드의 중복을 줄임
# 2) 확장성
#       : 기본 클래스를 수정하지 않고 새로운 기능을 추가
#       >> 기본 기능의 수정도 가능
# 3) 모듈화
#       : 특정 기능의 집합을 부모 클래스에서 정의
#       >> 여러 자식 클래스를 정의하여 모듈화된 설계 가능

#! 3. 상속 관계 구현
# '~은 ~~이다.'의 관계가 성립해야만 상속 가능
# EX) Car는 Vehicle이다. (자동차는 운송수단이다.)
#       SamsungNoteBook은 Computer이다. (삼성노트북은 컴퓨터이다.)
# - Rameon은 LeeSeungAh이다. (라면은 이승아이다.)

#! 4. 상속 예제

# 부모 클래스 구현
class ParentClass:
    # 인스턴스 메서드
    def parent(self):
        print('이 메서드는 부모 클래스에서 정의되었습니다.')
        
# 자식 클래스 구현
#? 상속 구현 방법
# class 자식클래스명(부모클래스명):
# >> 소괄호 안에 어떤 부모 클래스를 상속받는지 명시
class ChildClass(ParentClass):
    pass # 클래스 내의 pass 키워드: 해당 클래스 내에서 특별한 기능 동작을 하지 않을 경우 작성

parent = ParentClass()
child = ChildClass()

parent.parent() # 해당 인스턴스의 클래스 내부에 정의된 parent() 메서드
child.parent() # 상속받은 부모 클래스 내부에 정의된 parent() 메서드
# >> 부모 클래스의 속성과 기능을 상속받음