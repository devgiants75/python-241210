# A_list

# List 자료형
# : 순서 O, 변경 O, 중복 O
# : 여러 값을 순서대로 저장할 수 있는 컬렉션 타입
# : 대괄호[]를 사용하여 생성, 각 데이터(요소)는 쉼표(,)로 구분

# cf) 요소: 컬렉션 내의 각 데이터

# 1. 리스트 생성
# 리스트명(변수명) = [요소1, 요소2, 요소3, ...]
fruitsBasket = ['사과', '바나나', '딸기']

fruit1 = '사과'
fruit2 = '바나나'
fruit3 = '딸기'

list1 = [] # 빈 리스트
list2 = [1, 7, 3] # 정수형 리스트
list3 = ['a', 'b', 'c'] # 문자형 리스트
list4 = [1, '안녕', True] # 다양한 자료형의 혼합
list5 = [1, 2, [3, 4]] # 리스트 안에 리스트 (중첩 리스트)

# cf) 리스트의 인덱스번호(index)
# : 데이터를 구분할 수 있는 색인(지표)
# - 원하는 항목을 쉽게 찾아 볼 수 있도록 해 놓은 것
# - 0부터 시작, 1씩 증가

# 2. 리스트의 요소 검색
# : 리스트 인덱싱 & 슬라이싱
# 1) list 인덱싱
#   : 리스트명[인덱스번호]
list = [1, 2, 3, 4, 5]
print(list[2]) # 3 # 실행 단축키: ctrl + shift + f10
print(list[4]) # 5
list_var = list[0]
print(list_var) # 1 # var(iable): 변수

# cf) 리스트 인덱스 번호를 제일 마지막에서 읽어올 때: -1부터 시작, 1씩 감소
print(list[-2]) # 4

# 2) 리스트 슬라이싱
# : 연속적인 여러 개의 요소를 동시에 추출
# : 리스트명[시작번호:끝번호]
# - 시작번호는 포함O, 끝번호는 포함X
print(list[1:4]) # [2, 3, 4]
print(list[2:3]) # [3]

# 3. 리스트의 활용
# 1) 리스트의 연산 (+, *)
list1 = [1, 2, 3]
list2 = [4, 5, 6]
# 덧셈: 여러 개의 배열을 하나의 구조로 합하는 것
print(list1 + list2) # [1, 2, 3, 4, 5, 6]

# 곱셈: 배열의 반복을 하나의 구조로 합하는 것
print(list1 * 3) # [1, 2, 3, 1, 2, 3, 1, 2, 3]

# 2) 리스트의 길이
# : 요소의 개수
# : len(리스트명)
print(len(list1)) # 3

# 3) 리스트 추가, 수정, 삭제
list = [1, 2, 3]

# 리스트명.append(데이터): 요소 추가
list.append(4) # 리스트의 제일 마지막에 해당 데이터를 추가
print(list) # [1, 2, 3, 4]

# del(): 요소 삭제
# del 리스트명[인덱스번호]
del list[0]
print(list) # [2, 3, 4]

# 수정의 기능을 담당하는 함수 X
# : 리스트명[인덱스번호] = 데이터
list[2] = 10
print(list) # [2, 3, 10]

list.append(2)
list.append(2)
list.append(3)
list.append(10)
print(list) # [2, 3, 10, 2, 2, 3, 10]